#This file is generated by ModuleSync, do not edit.

puppetversion = ENV.key?('PUPPET_VERSION') ? "#{ENV['PUPPET_VERSION']}" : '~>3'
gem_sources   = ENV.key?('SIMP_GEM_SERVERS') ? ENV['SIMP_GEM_SERVERS'].split(/[, ]+/) : ['https://rubygems.org']

gem_sources.each { |gem_source| source gem_source }

def location_for(place, version = nil)
  if place =~ /^(git[:@][^#]*)#(.*)/
    [version, { :git => $1, :branch => $2, :require => false}].compact
  elsif place =~ /^file:\/\/(.*)/
    ['>= 0', { :path => File.expand_path($1), :require => false}]
  else
    [place, version, { :require => false}].compact
  end
end

group :test do
  gem "rake"
  gem 'puppet', puppetversion
  gem 'json',                      :require => false
  gem 'metadata-json-lint'
  gem 'puppet_facts',              :require => false
  #gem 'puppet-blacksmith',         :require => false
  gem 'puppetlabs_spec_helper'
  gem 'rspec-puppet', '>= 2.3.2'
  gem 'simplecov',                 :require => false
  gem "simp-rspec-puppet-facts"

  # dependency hacks:
  gem "fog-google", '~> 0.0.9' # 0.1 dropped support for ruby 1.9

  # simp-rake-helpers does not suport puppet 2.7.X
  if "#{ENV['PUPPET_VERSION']}".scan(/\d+/).first != '2' &&
      # simp-rake-helpers and ruby 1.8.7 bomb Travis tests
      # TODO: fix upstream deps (parallel in simp-rake-helpers)
      RUBY_VERSION.sub(/\.\d+$/,'') != '1.8'
    gem 'simp-rake-helpers'
  end
end

group :development do
  gem "travis"
  gem "travis-lint"
  gem "vagrant-wrapper"
  gem "puppet-blacksmith"
  gem "guard-rake"
  gem 'pry'
  gem 'pry-doc'
end

group :system_tests do
  gem 'simp-beaker-helpers', '>= 1.0.5'
  gem 'net-ssh', '~> 2.9.0'
  gem 'beaker-rspec'
  gem 'beaker'
  gem 'serverspec',                    :require => false
  gem 'beaker-puppet_install_helper',  :require => false
  gem 'master_manipulator',            :require => false
  gem 'beaker-hostgenerator'#,          *location_for(ENV['BEAKER_HOSTGENERATOR_VERSION'])
end

gem 'facter', *location_for(ENV['FACTER_GEM_VERSION'])

if File.exists? "#{__FILE__}.local"
  eval(File.read("#{__FILE__}.local"), binding)
end
